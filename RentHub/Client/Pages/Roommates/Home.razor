@page "/roommates"
@using RentHub.Shared
@inject HttpClient client
@inject IJSRuntime js

<h3>Manage Roommates</h3>

@if (roommatesList == null)
{
    <text>Loading...</text>
}
else if (roommatesList.Length == 0)
{
    <text>No Records Found.</text>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Name</th>
                <th>Monthy Rent</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (Roommate roommate in roommatesList)
            {
                <tr>
                    <td>@roommate.Name</td>
                    <td>@roommate.MonthlyRentAmount</td>
                    <td>
                        <a class="btn btn-success" href="roommates/edit/@roommate.Id">Edit</a>
                        <button class="btn btn-danger" @onclick="@(() => Delete(roommate.Id))">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<div>
    <a class="btn btn-success" href="roommates/create"><i class="oi oi-plus"></i> Create New</a>
</div>

@code {
    Roommate[] roommatesList { get; set; }
    
    protected override async Task OnInitializedAsync()
    {
        roommatesList = await client.GetFromJsonAsync<Roommate[]>("api/roommate");
    }
  
    async Task Delete(int id)
    {
        var roommate = roommatesList.First(x => x.Id == id);
        if (await js.InvokeAsync<bool>("confirm", $"Delete {roommate.Name}?"))
        {
            await client.DeleteAsync($"api/roommate/{id}");
            await OnInitializedAsync();
        }
    }
}
